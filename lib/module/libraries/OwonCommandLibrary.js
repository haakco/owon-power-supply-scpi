import { EnumSCPICommands } from '../enums';
import {
  OwonConnectLibrary,
  OwonLibraryDefaultConfig,
} from './OwonConnectLibrary';
export class OwonCommandLibrary {
  owonConLib;
  constructor(path, config) {
    this.owonConLib = new OwonConnectLibrary(path, config);
  }
  static async build(path, config) {
    const mainConfig = config ?? OwonLibraryDefaultConfig;
    const owonCommandLibrary = new OwonCommandLibrary(path, mainConfig);
    await owonCommandLibrary.init();
    return owonCommandLibrary;
  }
  async close() {
    await this.reset();
    await this.setRemote();
    await this.setOutputOff();
    return this.owonConLib.close();
  }
  async reset() {
    await this.owonConLib.writeCommand(EnumSCPICommands.RESET);
    return;
  }
  async setRemote() {
    await this.owonConLib.writeCommand(EnumSCPICommands.REMOTE);
    return;
  }
  async setLocal() {
    await this.owonConLib.writeCommand(EnumSCPICommands.LOCAL);
    return;
  }
  async setOutputOn() {
    await this.owonConLib.writeCommand(EnumSCPICommands.SET_OUTPUT_ON);
    return;
  }
  async setOutputOff() {
    await this.owonConLib.writeCommand(EnumSCPICommands.SET_OUTPUT_OFF);
    return;
  }
  async getOutput() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_OUTPUT);
  }
  async getId() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_ID);
  }
  async measureVoltage() {
    return this.owonConLib.readCommand(EnumSCPICommands.MEASURE_VOLTAGE);
  }
  async setVoltage(voltage) {
    await this.owonConLib.writeCommand(
      `${EnumSCPICommands.SET_VOLTAGE} ${voltage}`,
    );
    return;
  }
  async setVoltageLimit(voltage) {
    await this.owonConLib.writeCommand(
      `${EnumSCPICommands.SET_VOLTAGE_LIMIT} ${voltage}`,
    );
    return;
  }
  async getVoltage() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_VOLTAGE);
  }
  async getVoltageLimit() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_VOLTAGE_LIMIT);
  }
  async measureCurrent() {
    return this.owonConLib.readCommand(EnumSCPICommands.MEASURE_CURRENT);
  }
  async setCurrent(voltage) {
    await this.owonConLib.writeCommand(
      `${EnumSCPICommands.SET_CURRENT} ${voltage}`,
    );
    return;
  }
  async setCurrentLimit(voltage) {
    await this.owonConLib.writeCommand(
      `${EnumSCPICommands.SET_CURRENT_LIMIT} ${voltage}`,
    );
    return;
  }
  async getCurrent() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_CURRENT);
  }
  async getCurrentLimit() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_CURRENT_LIMIT);
  }
  async measureAll() {
    return this.owonConLib.readCommand(EnumSCPICommands.MEASURE_ALL);
  }
  async measureAllInfo() {
    return this.owonConLib.readCommand(EnumSCPICommands.MEASURE_ALL_INFO);
  }
  async measurePower() {
    return this.owonConLib.readCommand(EnumSCPICommands.MEASURE_POWER);
  }
  async init() {
    await this.owonConLib.open();
    await this.reset();
    await this.setRemote();
    await this.setOutputOff();
    return;
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3dvbkNvbW1hbmRMaWJyYXJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYnJhcmllcy9Pd29uQ29tbWFuZExpYnJhcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRTVDLE9BQU8sRUFDTCxrQkFBa0IsRUFDbEIsd0JBQXdCLEdBQ3pCLE1BQU0sc0JBQXNCLENBQUM7QUFFOUIsTUFBTSxPQUFPLGtCQUFrQjtJQUNyQixVQUFVLENBQXFCO0lBRXZDLFlBQ0UsSUFBWSxFQUNaLE1BQStDO1FBRS9DLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDekQsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUN2QixJQUFZLEVBQ1osTUFBK0M7UUFFL0MsTUFBTSxVQUFVLEdBQUcsTUFBTSxJQUFJLHdCQUF3QixDQUFDO1FBQ3RELE1BQU0sa0JBQWtCLEdBQUcsSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDcEUsTUFBTSxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNoQyxPQUFPLGtCQUFrQixDQUFDO0lBQzVCLENBQUM7SUFFTSxLQUFLLENBQUMsS0FBSztRQUNoQixNQUFNLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNuQixNQUFNLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUN2QixNQUFNLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUMxQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVNLEtBQUssQ0FBQyxLQUFLO1FBQ2hCLE1BQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0Qs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
