import { EnumSCPICommands } from '../enums';
import {
  OwonConnectLibrary,
  OwonLibraryDefaultConfig,
} from './OwonConnectLibrary';
export class OwonCommandLibrary {
  owonConLib;
  config;
  constructor(path, config) {
    this.config = config ?? OwonLibraryDefaultConfig;
    this.owonConLib = new OwonConnectLibrary(path, this.config);
  }
  static async build(path, config) {
    const owonCommandLibrary = new OwonCommandLibrary(path, config);
    await owonCommandLibrary.init();
    return owonCommandLibrary;
  }
  async close() {
    await this.setRemote();
    await this.setOutputOff();
    return this.owonConLib.close();
  }
  async reset() {
    await this.owonConLib.writeCommand(EnumSCPICommands.RESET);
    return;
  }
  async setRemote() {
    await this.owonConLib.writeCommand(EnumSCPICommands.REMOTE);
    return;
  }
  async setLocal() {
    await this.owonConLib.writeCommand(EnumSCPICommands.LOCAL);
    return;
  }
  async setOutputOn() {
    await this.owonConLib.writeCommand(EnumSCPICommands.SET_OUTPUT_ON);
    return;
  }
  async setOutputOff() {
    await this.owonConLib.writeCommand(EnumSCPICommands.SET_OUTPUT_OFF);
    return;
  }
  async getOutput() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_OUTPUT);
  }
  async getId() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_ID);
  }
  async setVoltage(voltage) {
    await this.owonConLib.writeCommand(
      `${EnumSCPICommands.SET_VOLTAGE} ${voltage}`,
    );
    return;
  }
  async setVoltageLimit(voltage) {
    await this.owonConLib.writeCommand(
      `${EnumSCPICommands.SET_VOLTAGE_LIMIT} ${voltage}`,
    );
    return;
  }
  async getVoltage() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_VOLTAGE);
  }
  async getVoltageLimit() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_VOLTAGE_LIMIT);
  }
  async measureVoltage() {
    return this.owonConLib.readCommand(EnumSCPICommands.MEASURE_VOLTAGE);
  }
  async setCurrent(current) {
    await this.owonConLib.writeCommand(
      `${EnumSCPICommands.SET_CURRENT} ${current}`,
    );
    return;
  }
  async setCurrentLimit(current) {
    await this.owonConLib.writeCommand(
      `${EnumSCPICommands.SET_CURRENT_LIMIT} ${current}`,
    );
    return;
  }
  async getCurrent() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_CURRENT);
  }
  async getCurrentLimit() {
    return this.owonConLib.readCommand(EnumSCPICommands.GET_CURRENT_LIMIT);
  }
  async measureCurrent() {
    return this.owonConLib.readCommand(EnumSCPICommands.MEASURE_CURRENT);
  }
  async measureAll() {
    return this.owonConLib.readCommand(EnumSCPICommands.MEASURE_ALL);
  }
  async measureAllInfo() {
    return this.owonConLib.readCommand(EnumSCPICommands.MEASURE_ALL_INFO);
  }
  async measurePower() {
    return this.owonConLib.readCommand(EnumSCPICommands.MEASURE_POWER);
  }
  async init() {
    await this.owonConLib.open();
    await this.setRemote();
    await this.setOutputOff();
    await this.setLocal();
    return;
  }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3dvbkNvbW1hbmRMaWJyYXJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYnJhcmllcy9Pd29uQ29tbWFuZExpYnJhcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0EsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sVUFBVSxDQUFDO0FBRTVDLE9BQU8sRUFDTCxrQkFBa0IsRUFDbEIsd0JBQXdCLEdBQ3pCLE1BQU0sc0JBQXNCLENBQUM7QUFFOUIsTUFBTSxPQUFPLGtCQUFrQjtJQUNyQixVQUFVLENBQXFCO0lBQy9CLE1BQU0sQ0FBeUM7SUFFdkQsWUFDRSxJQUFZLEVBQ1osTUFBK0M7UUFFL0MsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLElBQUksd0JBQXdCLENBQUM7UUFDakQsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLGtCQUFrQixDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDOUQsQ0FBQztJQUVNLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUN2QixJQUFZLEVBQ1osTUFBK0M7UUFFL0MsTUFBTSxrQkFBa0IsR0FBRyxJQUFJLGtCQUFrQixDQUFDLElBQUksRUFBRSxNQUFNLENBQUMsQ0FBQztRQUNoRSxNQUFNLGtCQUFrQixDQUFDLElBQUksRUFBRSxDQUFDO1FBQ2hDLE9BQU8sa0JBQWtCLENBQUM7SUFDNUIsQ0FBQztJQUVNLEtBQUssQ0FBQyxLQUFLO1FBQ2hCLE1BQU0sSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO1FBQ3ZCLE1BQU0sSUFBSSxDQUFDLFlBQVksRUFBRSxDQUFDO1FBQzFCLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxLQUFLLEVBQUUsQ0FBQztJQUNqQyxDQUFDO0lBRU0sS0FBSyxDQUFDLEtBQUs7UUFDaEIsTUFBTSxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxnQkFBZ0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUMzRCxPQUFP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
