'use strict';
Object.defineProperty(exports, '__esModule', { value: true });
exports.OwonCommandLibrary = void 0;
const enums_1 = require('../enums');
const OwonConnectLibrary_1 = require('./OwonConnectLibrary');
class OwonCommandLibrary {
  constructor(path, config) {
    this.owonConLib = new OwonConnectLibrary_1.OwonConnectLibrary(path, config);
  }
  static async build(path, config) {
    const mainConfig =
      config !== null && config !== void 0
        ? config
        : OwonConnectLibrary_1.OwonLibraryDefaultConfig;
    const owonCommandLibrary = new OwonCommandLibrary(path, mainConfig);
    await owonCommandLibrary.init();
    return owonCommandLibrary;
  }
  async close() {
    await this.reset();
    await this.setRemote();
    await this.setOutputOff();
    return this.owonConLib.close();
  }
  async reset() {
    await this.owonConLib.writeCommand(enums_1.EnumSCPICommands.RESET);
    return;
  }
  async setRemote() {
    await this.owonConLib.writeCommand(enums_1.EnumSCPICommands.REMOTE);
    return;
  }
  async setLocal() {
    await this.owonConLib.writeCommand(enums_1.EnumSCPICommands.LOCAL);
    return;
  }
  async setOutputOn() {
    await this.owonConLib.writeCommand(enums_1.EnumSCPICommands.SET_OUTPUT_ON);
    return;
  }
  async setOutputOff() {
    await this.owonConLib.writeCommand(enums_1.EnumSCPICommands.SET_OUTPUT_OFF);
    return;
  }
  async getOutput() {
    return this.owonConLib.readCommand(enums_1.EnumSCPICommands.GET_OUTPUT);
  }
  async getId() {
    return this.owonConLib.readCommand(enums_1.EnumSCPICommands.GET_ID);
  }
  async measureVoltage() {
    return this.owonConLib.readCommand(
      enums_1.EnumSCPICommands.MEASURE_VOLTAGE,
    );
  }
  async setVoltage(voltage) {
    await this.owonConLib.writeCommand(
      `${enums_1.EnumSCPICommands.SET_VOLTAGE} ${voltage}`,
    );
    return;
  }
  async setVoltageLimit(voltage) {
    await this.owonConLib.writeCommand(
      `${enums_1.EnumSCPICommands.SET_VOLTAGE_LIMIT} ${voltage}`,
    );
    return;
  }
  async getVoltage() {
    return this.owonConLib.readCommand(enums_1.EnumSCPICommands.GET_VOLTAGE);
  }
  async getVoltageLimit() {
    return this.owonConLib.readCommand(
      enums_1.EnumSCPICommands.GET_VOLTAGE_LIMIT,
    );
  }
  async measureCurrent() {
    return this.owonConLib.readCommand(
      enums_1.EnumSCPICommands.MEASURE_CURRENT,
    );
  }
  async setCurrent(voltage) {
    await this.owonConLib.writeCommand(
      `${enums_1.EnumSCPICommands.SET_CURRENT} ${voltage}`,
    );
    return;
  }
  async setCurrentLimit(voltage) {
    await this.owonConLib.writeCommand(
      `${enums_1.EnumSCPICommands.SET_CURRENT_LIMIT} ${voltage}`,
    );
    return;
  }
  async getCurrent() {
    return this.owonConLib.readCommand(enums_1.EnumSCPICommands.GET_CURRENT);
  }
  async getCurrentLimit() {
    return this.owonConLib.readCommand(
      enums_1.EnumSCPICommands.GET_CURRENT_LIMIT,
    );
  }
  async measureAll() {
    return this.owonConLib.readCommand(enums_1.EnumSCPICommands.MEASURE_ALL);
  }
  async measureAllInfo() {
    return this.owonConLib.readCommand(
      enums_1.EnumSCPICommands.MEASURE_ALL_INFO,
    );
  }
  async measurePower() {
    return this.owonConLib.readCommand(enums_1.EnumSCPICommands.MEASURE_POWER);
  }
  async init() {
    await this.owonConLib.open();
    await this.reset();
    await this.setRemote();
    await this.setOutputOff();
    return;
  }
}
exports.OwonCommandLibrary = OwonCommandLibrary;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiT3dvbkNvbW1hbmRMaWJyYXJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2xpYnJhcmllcy9Pd29uQ29tbWFuZExpYnJhcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBR0Esb0NBQTRDO0FBRTVDLDZEQUc4QjtBQUU5QixNQUFhLGtCQUFrQjtJQUc3QixZQUNFLElBQVksRUFDWixNQUErQztRQUUvQyxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksdUNBQWtCLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQ3pELENBQUM7SUFFTSxNQUFNLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FDdkIsSUFBWSxFQUNaLE1BQStDO1FBRS9DLE1BQU0sVUFBVSxHQUFHLE1BQU0sYUFBTixNQUFNLGNBQU4sTUFBTSxHQUFJLDZDQUF3QixDQUFDO1FBQ3RELE1BQU0sa0JBQWtCLEdBQUcsSUFBSSxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsVUFBVSxDQUFDLENBQUM7UUFDcEUsTUFBTSxrQkFBa0IsQ0FBQyxJQUFJLEVBQUUsQ0FBQztRQUNoQyxPQUFPLGtCQUFrQixDQUFDO0lBQzVCLENBQUM7SUFFTSxLQUFLLENBQUMsS0FBSztRQUNoQixNQUFNLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUNuQixNQUFNLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQztRQUN2QixNQUFNLElBQUksQ0FBQyxZQUFZLEVBQUUsQ0FBQztRQUMxQixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsS0FBSyxFQUFFLENBQUM7SUFDakMsQ0FBQztJQUVNLEtBQUssQ0FBQyxLQUFLO1FBQ2hCLE1BQU0sSUFBSSxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsd0JBQWdCLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDM0QsT0FBTztJQUNULENBQUM7SUFFTSxLQUFLLENBQUMsU0FBUztRQUNwQixNQUFNLElBQUksQ0FBQyxVQUFVLENBQUMsWUFBWSxDQUFD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
